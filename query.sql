--Query to get amount of orders grouped by week
SELECT EXTRACT(WEEK FROM Date) AS Week_Number, COUNT(*) AS Order_Count
FROM Transactions
GROUP BY EXTRACT(WEEK FROM Date)
ORDER BY Week_Number DESC
LIMIT 52;

--Query to print 10 best selling days
SELECT DATE(Date) AS Order_Date, SUM(Total) AS Total_Sales
FROM Transactions
GROUP BY DATE(Date)
ORDER BY Total_Sales DESC
LIMIT 10;

--Query to select count of orders, sum of order grouped by hour
SELECT EXTRACT(HOUR FROM Date) AS Hour_Number, COUNT(*) AS Order_Count, SUM(Total) AS TOTAL_SALES
FROM Transactions
GROUP BY EXTRACT(HOUR FROM Date)
ORDER BY Hour_Number DESC;

--Query to get Ingredients associated with a specific menu item
SELECT mi.Name AS MenuItemName, ii.Name AS IngredientName
FROM MenuItemIngredients mii
JOIN MenuItems mi ON mii.MenuItemID = mi.MenuItemID
JOIN IngredientsInventory ii ON mii.IngredientID = ii.IngredientID
WHERE mi.Name = 'Double Stack Burger';

-------------------------------------------------------------------

--Query to get all Transaction Entries in a Transaction
SELECT te.*
FROM Transactions t
JOIN TransactionEntry te ON t.TransactionID = te.TransactionID
WHERE t.TransactionID = '1';

--TODO: Employee order history (UNVERIFIED ON DATABASE)
SELECT *
FROM Transactions
WHERE EmployeeID = ENTER EMPLOYEE ID;

--TODO: Total amount of revenue generated by employee (UNVERIFIED ON DATABASE)
SELECT 
    SUM(Total) AS Total_Revenue
FROM 
    Transactions
WHERE 
    EmployeeID = ENTER EMPLOYEE ID;

--TODO: Get menu items on a transaction based on id (UNVERIFIED ON DATABASE)
SELECT 
    mi.MenuItemID,
    mi.Name AS MenuItem_Name,
    mi.Price AS MenuItem_Price
FROM 
    TransactionEntry te
JOIN 
    MenuItems mi ON te.MenuItemID = mi.MenuItemID
WHERE 
    te.TransactionID = ENTER TRANSACTION ID;

--TODO: Get total of transaction based on id (UNVERIFIED ON DATABASE)
SELECT 
    SUM(mi.Price) AS Total_Price
FROM 
    TransactionEntry te
JOIN 
    MenuItems mi ON te.MenuItemID = mi.MenuItemID
WHERE 
    te.TransactionID = ENTER TRANSACTION ID;

--TODO: Get all managers (UNVERIFIED ON DATABASE)
SELECT 
    EmployeeID,
    Name AS Employee_Name,
    Role
FROM 
    Employees
WHERE 
    Role = 'Manager';

--TODO: Get list of cashier (UNVERIFIED ON DATABASE)
SELECT 
    EmployeeID,
    Name AS Employee_Name,
    Role
FROM 
    Employees
WHERE 
    Role = 'Cashier';

--TODO: Most sold items (UNVERIFIED ON DATABASE)
SELECT mi.MenuItemID, mi.Name, COUNT(te.TransactionID) AS TotalSales
FROM Transactions t
JOIN TransactionEntry te ON t.TransactionID = te.TransactionID
JOIN MenuItems mi ON te.MenuItemID = mi.MenuItemID
GROUP BY mi.MenuItemID, mi.Name
ORDER BY TotalSales DESC;

--TODO: Lowest stock items? (UNVERIFIED ON DATABASE)
SELECT IngredientID, IngredientName, Stock
FROM Ingredients
ORDER BY Stock ASC;

--TODO: Get cheapest items (UNVERIFIED ON DATABASE)
SELECT 
    MenuItemID,
    Name AS MenuItem_Name,
    Price AS MenuItem_Price
FROM 
    MenuItems
ORDER BY 
    Price
LIMIT 5;

--TODO: Get worst selling items (UNVERIFIED ON DATABASE)
SELECT mi.MenuItemID, mi.Name, COUNT(te.TransactionID) AS TotalSales
FROM Transactions t
JOIN TransactionEntry te ON t.TransactionID = te.TransactionID
JOIN MenuItems mi ON te.MenuItemID = mi.MenuItemID
GROUP BY mi.MenuItemID, mi.Name
ORDER BY TotalSales ASC;
